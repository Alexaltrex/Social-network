{"version":3,"sources":["redux/dialogs-selectors.ts","Components/Main/Dialogs/DialogsListItem.tsx","Components/Main/Dialogs/DialogsList.tsx","Components/Main/Dialogs/CurrentDialog.tsx","Components/Main/Dialogs/Dialogs.tsx"],"names":["getDialogsSelector","state","dialogs","getCurrentDialogsListItem","currentDialogsListItem","ListItemLink","primary","secondary","to","src","ownIndex","classes","useStyles","dispatch","useDispatch","useSelector","renderLink","React","useMemo","forwardRef","itemProps","ref","selected","secondary2","DATE","dateTranslateFromAPI","className","item","ListItem","button","component","onClick","dialogsAC","setCurrentDialogsListItem","ListItemAvatar","Avatar","Typography","color","variant","ListItemText","DialogsListItem","dialog","id","userName","lastDialogActivityDate","photos","small","undefined","makeStyles","borderTop","borderBottom","DialogsList","dialogsElements","map","i","key","Card","card","elevation","List","padding","btnWrapper","marginBottom","CurrentDialog","userId","useParams","Button","sendMessage","getMessages","startDialog","getDialogs","getIsMessageViewed","signMessageAsSpam","Dialogs","isLoading","getIsLoading","useEffect","CircularPreloader","root","firstColumn","lastColumn","display","flexBasis","marginRight","flexGrow"],"mappings":"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","file":"static/js/4.e38f893b.chunk.js","sourcesContent":["import {StateType} from \"./redux-store\";\r\n\r\nexport const getDialogsSelector = (state: StateType) => state.dialogs.dialogs;\r\nexport const getMessagesSelector = (state: StateType) => state.dialogs.messages;\r\nexport const getCurrentDialogsListItem = (state: StateType) => state.dialogs.currentDialogsListItem;\r\n","import React from \"react\";\r\nimport {DialogType} from \"../../../DAL/dialogs-api\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {ListItem} from \"@material-ui/core\";\r\nimport {Link as RouterLink, LinkProps as RouterLinkProps} from 'react-router-dom';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCurrentDialogsListItem} from \"../../../redux/dialogs-selectors\";\r\nimport {dialogsAC} from \"../../../redux/dialogs-reducer\";\r\nimport {DATE} from \"../../../utilities/date\";\r\n\r\nconst ListItemLink: React.FC<ListItemLinkPropsType> = ({primary, secondary, to, src, ownIndex}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const currentDialogsListItem = useSelector(getCurrentDialogsListItem);\r\n    const renderLink = React.useMemo(\r\n        () =>\r\n            React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((itemProps, ref) => (\r\n                <RouterLink to={to} ref={ref} {...itemProps} />\r\n            )),\r\n        [to],\r\n    );\r\n    const onClickHandle = () => {\r\n        dispatch(dialogsAC.setCurrentDialogsListItem(ownIndex))\r\n    }\r\n    const selected = ownIndex === currentDialogsListItem;\r\n    const secondary2 = DATE.dateTranslateFromAPI(secondary)\r\n\r\n\r\n    return (\r\n        <li className={classes.item}>\r\n            <ListItem button component={renderLink} selected={selected} onClick={onClickHandle}>\r\n                <ListItemAvatar>\r\n                    <Avatar src={src}/>\r\n                </ListItemAvatar>\r\n                <Typography color='primary' variant='h6'>\r\n                    <ListItemText primary={primary} secondary={secondary2}/>\r\n                </Typography>\r\n            </ListItem>\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\nconst DialogsListItem: React.FC<PropsType> = ({dialog, ownIndex}) => {\r\n\r\n    return (\r\n        <ListItemLink\r\n            to={`/dialogs/${dialog.id}`}\r\n            primary={dialog.userName}\r\n            secondary={dialog.lastDialogActivityDate}\r\n            src={dialog.photos.small ? dialog.photos.small : undefined}\r\n            ownIndex={ownIndex}\r\n        >\r\n        </ListItemLink>\r\n    )\r\n};\r\nexport default DialogsListItem;\r\n\r\n//===================== TYPE =======================\r\ntype ListItemLinkPropsType = {\r\n    primary: string\r\n    secondary: string\r\n    to: string\r\n    src: string | undefined\r\n    ownIndex: number\r\n}\r\n\r\ntype PropsType = {\r\n    dialog: DialogType\r\n    ownIndex: number\r\n}\r\n\r\n//===================== STYLE ======================\r\nconst useStyles = makeStyles({\r\n    item: {\r\n        borderTop: '1px solid #ccc',\r\n        '&:last-child': {\r\n            borderBottom: '1px solid #ccc'\r\n        },\r\n    }\r\n});","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DialogType} from \"../../../DAL/dialogs-api\";\r\nimport List from \"@material-ui/core/List\";\r\nimport DialogsListItem from \"./DialogsListItem\";\r\n\r\n\r\nconst DialogsList: React.FC<PropsType> = ({dialogs}) => {\r\n    const classes = useStyles();\r\n\r\n    const dialogsElements = dialogs && dialogs\r\n        .map((item, i) => <DialogsListItem key={item.id}\r\n                                           ownIndex={i + 1}\r\n                                           dialog={item}/>);\r\n\r\n    return (\r\n        <Card className={classes.card} elevation={6}>\r\n            <List>\r\n                {dialogsElements}\r\n            </List>\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default DialogsList;\r\n\r\n//============================ TYPE ================================================\r\ntype PropsType = {\r\n    dialogs: null | Array<DialogType>\r\n}\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        padding: '15px 0',\r\n    },\r\n    btnWrapper: {\r\n        marginBottom: 10\r\n    }\r\n});","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Card} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    getDialogs,\r\n    getIsMessageViewed,\r\n    getMessages,\r\n    sendMessage,\r\n    signMessageAsSpam,\r\n    startDialog\r\n} from \"../../../redux/dialogs-reducer\";\r\nimport {useParams} from \"react-router\";\r\n\r\nconst CurrentDialog = () => {\r\n    const classes = useStyles();\r\n\r\n    let {userId} = useParams();\r\n\r\n    const dispatch = useDispatch()\r\n    const onSendMessageHandle = () => {\r\n        dispatch(sendMessage(11, 'test'))\r\n    };\r\n    const onGetMessagesHandle = () => {\r\n        dispatch(getMessages(11))\r\n    };\r\n    const onGetDialogsHandle = () => {\r\n        dispatch(getDialogs())\r\n    };\r\n    const onStartDialogHandle = () => {\r\n        dispatch(startDialog(22))\r\n    };\r\n    const onGetIsYourMessageViewedHandle = () => {\r\n        dispatch(getIsMessageViewed('bfa8261c-a2e7-4394-845b-cc7ffece5112'))\r\n    };\r\n\r\n    const onClick2 = () => {\r\n        dispatch(signMessageAsSpam('bfa8261c-a2e7-4394-845b-cc7ffece5112'))\r\n    };\r\n    return(\r\n        <Card className={classes.card} elevation={6}>\r\n            {userId}\r\n            <div className={classes.btnWrapper}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onSendMessageHandle}>\r\n                    Send message to userId = 11\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.btnWrapper}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onGetMessagesHandle}>\r\n                    Get messages with userId = 11\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.btnWrapper}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onStartDialogHandle}>\r\n                    Start dialog\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.btnWrapper}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onGetDialogsHandle}>\r\n                    Get all dialogs\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.btnWrapper}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onGetIsYourMessageViewedHandle}>\r\n                    Get is your message viewed\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.btnWrapper}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={onClick2}>\r\n                    Sign Message As Spam\r\n                </Button>\r\n            </div>\r\n\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default CurrentDialog;\r\n\r\n//========================== STYLES ================================================\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        padding: 15,\r\n    },\r\n    btnWrapper: {\r\n        marginBottom: 10\r\n    }\r\n});","import React, {useEffect} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport DialogsList from \"./DialogsList\";\r\nimport CurrentDialog from \"./CurrentDialog\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsLoading} from \"../../../redux/app-selectors\";\r\nimport CircularPreloader from \"../../common/CircularPreloader\";\r\nimport {getDialogsSelector} from \"../../../redux/dialogs-selectors\";\r\nimport {getDialogs} from \"../../../redux/dialogs-reducer\";\r\n\r\n\r\nconst Dialogs: React.FC = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(getIsLoading);\r\n    const dialogs = useSelector(getDialogsSelector);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDialogs())\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading || !dialogs\r\n                    ? <div className={classes.root}>\r\n                        <div className={classes.firstColumn}>\r\n                            <DialogsList dialogs={dialogs}/>\r\n                        </div>\r\n                        <div className={classes.lastColumn}>\r\n                            <CurrentDialog/>\r\n                        </div>\r\n                    </div>\r\n                    : <CircularPreloader/>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nexport default Dialogs;\r\n\r\n//========================== STYLES =============================================\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: \"flex\"\r\n\r\n    },\r\n    firstColumn: {\r\n        flexBasis: 300,\r\n        marginRight: 15,\r\n    },\r\n    lastColumn: {\r\n        flexGrow: 1\r\n    },\r\n});"],"sourceRoot":""}